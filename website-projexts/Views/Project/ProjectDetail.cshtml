@model website_projexts.Models.Projects

<link href="~/Content/prodetail.css" rel="stylesheet" />
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ProjectDetail</title>
</head>
<body>
    <div id="main-content" class="blog-page">
        <div class="container">
            <div class="row clearfix">
                <div class="col-md-12 col-lg-8 left-box">
                    <div class="card single_post">
                        <div class="body">
                            <div class="img-post">
                                <h2>
                                    @Html.DisplayFor(model => model.ProjectName)
                                </h2>
                                <img class="img-fluid d-block" src="@Url.Content(Model.ProjectImage)">
                            </div>
                            <div class="d-flex align-items-center">
                                <i class="fa fa-user" style="font-size: 30px;margin-right: 10px ;"></i>
                                <p>Created by <strong>
                                    @Html.DisplayFor(model => model.User.FirstName)
                                </strong></p>
                            </div>
                            <hr class="hr hr-blurry">
                            <div class="d-flex">
                                <p>
                                    Created
                                    <span id="timeAgo"></span>
                                    day ago
                                </p>
                                <p style="margin-right: 10px;margin-left: 10px;"><span style="color: rgb(55, 54, 55); background-color: initial;">•</span></p><i class="fa fa-tag" style="font-size: 30px;margin-right: 10px;"></i>
                                <p>
                                    @Html.DisplayFor(model => model.Category.CategoryName)
                                </p>
                            </div>
                            <hr class="hr hr-blurry">
                            <p>
                                @Html.DisplayFor(model => model.ShortDescription)
                            </p>
                            <hr class="hr hr-blurry">
                            <p>
                                @Html.DisplayFor(model => model.LongDescription)
                            </p>
                        </div>
                    </div>

                        @{ Html.RenderAction("UpdatePartial", "Update" , new{ ProjectID = Model.ProjectID });}

                </div>
                <div class="col-md-12 col-lg-4 right-box">
                    <div class="card">
                        <div class="body widget">
                            <p>
                                <span style="color: rgb(51, 51, 51);">
                                    @Html.DisplayFor(model => model.Raised)
                                </span><span style="color: rgb(118, 118, 118);">
                                    ₫ được gây quỹ trên
                                    @Html.DisplayFor(model => model.Goal)₫
                                </span>
                            </p>
                            <div class="progress">
                                <div class="progress-bar" aria-valuenow="@Model.Raised" aria-valuemin="0" aria-valuemax="@Model.Goal" style="width: @((Model.Raised * 100) / Model.Goal)%;">
                                    @string.Format("{0}%", (Model.Raised * 100) / Model.Goal)
                                </div>
                            </div>
                            <p>
                                <span style="color: rgb(118, 118, 118);">
                                    @if (Model.Donations != null)
                                    {
                                        <p>@Model.Donations.Count() Người Đã Ủng Hộ</p>
                                    }
                                    else
                                    {
                                        <p>Chưa ai ủng hộ dự án này :(</p>
                                    }
                                </span>
                            </p>
                            <button id="shareButton" class="btn btn-primary btn-lg form-control" type="button" style="margin-bottom: 10px;">
                                Chia sẻ
                            </button>
                            <div id="copyMessage" style="display: none;">URL copied to clipboard</div>
                            @Html.ActionLink("Đóng Góp", "DonationCreate", "Donation", new { projectID = Model.ProjectID }, new { @class = "btn btn-primary btn-lg form-control" })
                        </div>
                    </div>
                    @{ Html.RenderAction("DonationPartial", "Donation", new { ProjectID = Model.ProjectID });}
                </div>
            </div>
        </div>
    </div>

</body>
<script>
    // Get the PostedTime from your model
    var postedTime = new Date("@Model.PostedTime");

    // Calculate the time difference
    var currentTime = new Date();
    var timeDifference = currentTime - postedTime;
    var daysAgo = Math.floor(timeDifference / (1000 * 60 * 60 * 24));

    // Display the result
    var timeAgoElement = document.getElementById("timeAgo");
    timeAgoElement.textContent = daysAgo + " days ago";

    // Find the button and message elements by their IDs
    const shareButton = document.getElementById('shareButton');
    const copyMessage = document.getElementById('copyMessage');

    // Add a click event listener to the button
    shareButton.addEventListener('click', function () {
    // Create an input element to hold the URL
    const input = document.createElement('input');
    input.value = location.href; // Get the current URL

    // Append the input element to the body (must be visible)
    document.body.appendChild(input);

    // Select the URL inside the input element
    input.select();
    input.setSelectionRange(0, 99999); // For mobile devices

    // Copy the selected text to the clipboard
    document.execCommand('copy');

    // Remove the input element from the DOM
    document.body.removeChild(input);

    // Display the copy message
    copyMessage.style.display = 'block';

    // Hide the copy message after a few seconds (optional)
    setTimeout(function () {
        copyMessage.style.display = 'none';
    }, 2000); // Adjust the time as needed
});
</script>
</html>
